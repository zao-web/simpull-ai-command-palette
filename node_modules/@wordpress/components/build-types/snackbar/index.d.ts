/// <reference types="react" />
/**
 * A Snackbar displays a succinct message that is cleared out after a small delay.
 *
 * It can also offer the user options, like viewing a published post.
 * But these options should also be available elsewhere in the UI.
 *
 * ```jsx
 * const MySnackbarNotice = () => (
 *   <Snackbar>Post published successfully.</Snackbar>
 * );
 * ```
 */
export declare const Snackbar: import("react").ForwardRefExoticComponent<Omit<import("../notice/types").NoticeProps, "__unstableHTML"> & {
    icon?: import("react").ReactNode;
    explicitDismiss?: boolean | undefined;
    listRef?: import("react").MutableRefObject<HTMLDivElement | null> | undefined;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "className" | "children" | "as" | "status" | "actions" | "onRemove" | "isDismissible" | "spokenMessage" | "politeness" | "onDismiss" | keyof {
    icon?: import("react").ReactNode;
    explicitDismiss?: boolean | undefined;
    listRef?: import("react").MutableRefObject<HTMLDivElement | null> | undefined;
}> & {
    as?: keyof JSX.IntrinsicElements | undefined;
} & import("react").RefAttributes<any>>;
export default Snackbar;
//# sourceMappingURL=index.d.ts.map