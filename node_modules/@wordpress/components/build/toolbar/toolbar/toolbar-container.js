"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ToolbarContainer = void 0;
var _react = require("react");
var Ariakit = _interopRequireWildcard(require("@ariakit/react"));
var _element = require("@wordpress/element");
var _i18n = require("@wordpress/i18n");
var _toolbarContext = _interopRequireDefault(require("../toolbar-context"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 * External dependencies
 */
// eslint-disable-next-line no-restricted-imports

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function UnforwardedToolbarContainer({
  label,
  ...props
}, ref) {
  const toolbarStore = Ariakit.useToolbarStore({
    focusLoop: true,
    rtl: (0, _i18n.isRTL)()
  });
  return (
    // This will provide state for `ToolbarButton`'s
    (0, _react.createElement)(_toolbarContext.default.Provider, {
      value: toolbarStore
    }, (0, _react.createElement)(Ariakit.Toolbar, {
      ref: ref,
      "aria-label": label,
      store: toolbarStore,
      ...props
    }))
  );
}
const ToolbarContainer = (0, _element.forwardRef)(UnforwardedToolbarContainer);
exports.ToolbarContainer = ToolbarContainer;
var _default = ToolbarContainer;
exports.default = _default;
//# sourceMappingURL=toolbar-container.js.map