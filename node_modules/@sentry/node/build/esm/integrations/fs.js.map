{"version":3,"file":"fs.js","sources":["../../../src/integrations/fs.ts"],"sourcesContent":["import { FsInstrumentation } from '@opentelemetry/instrumentation-fs';\nimport { defineIntegration, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport { generateInstrumentOnce } from '@sentry/node-core';\n\nconst INTEGRATION_NAME = 'FileSystem';\n\n/**\n * This integration will create spans for `fs` API operations, like reading and writing files.\n *\n * **WARNING:** This integration may add significant overhead to your application. Especially in scenarios with a lot of\n * file I/O, like for example when running a framework dev server, including this integration can massively slow down\n * your application.\n *\n * @param options Configuration for this integration.\n */\nexport const fsIntegration = defineIntegration(\n  (\n    options: {\n      /**\n       * Setting this option to `true` will include any filepath arguments from your `fs` API calls as span attributes.\n       *\n       * Defaults to `false`.\n       */\n      recordFilePaths?: boolean;\n\n      /**\n       * Setting this option to `true` will include the error messages of failed `fs` API calls as a span attribute.\n       *\n       * Defaults to `false`.\n       */\n      recordErrorMessagesAsSpanAttributes?: boolean;\n    } = {},\n  ) => {\n    return {\n      name: INTEGRATION_NAME,\n      setupOnce() {\n        generateInstrumentOnce(\n          INTEGRATION_NAME,\n          () =>\n            new FsInstrumentation({\n              requireParentSpan: true,\n              endHook(functionName, { args, span, error }) {\n                span.updateName(`fs.${functionName}`);\n\n                span.setAttributes({\n                  [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'file',\n                  [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.file.fs',\n                });\n\n                if (options.recordErrorMessagesAsSpanAttributes) {\n                  if (typeof args[0] === 'string' && FS_OPERATIONS_WITH_PATH_ARG.includes(functionName)) {\n                    span.setAttribute('path_argument', args[0]);\n                  } else if (\n                    typeof args[0] === 'string' &&\n                    typeof args[1] === 'string' &&\n                    FS_OPERATIONS_WITH_TARGET_PATH.includes(functionName)\n                  ) {\n                    span.setAttribute('target_argument', args[0]);\n                    span.setAttribute('path_argument', args[1]);\n                  } else if (typeof args[0] === 'string' && FS_OPERATIONS_WITH_PREFIX.includes(functionName)) {\n                    span.setAttribute('prefix_argument', args[0]);\n                  } else if (\n                    typeof args[0] === 'string' &&\n                    typeof args[1] === 'string' &&\n                    FS_OPERATIONS_WITH_EXISTING_PATH_NEW_PATH.includes(functionName)\n                  ) {\n                    span.setAttribute('existing_path_argument', args[0]);\n                    span.setAttribute('new_path_argument', args[1]);\n                  } else if (\n                    typeof args[0] === 'string' &&\n                    typeof args[1] === 'string' &&\n                    FS_OPERATIONS_WITH_SRC_DEST.includes(functionName)\n                  ) {\n                    span.setAttribute('src_argument', args[0]);\n                    span.setAttribute('dest_argument', args[1]);\n                  } else if (\n                    typeof args[0] === 'string' &&\n                    typeof args[1] === 'string' &&\n                    FS_OPERATIONS_WITH_OLD_PATH_NEW_PATH.includes(functionName)\n                  ) {\n                    span.setAttribute('old_path_argument', args[0]);\n                    span.setAttribute('new_path_argument', args[1]);\n                  }\n                }\n\n                if (error && options.recordErrorMessagesAsSpanAttributes) {\n                  span.setAttribute('fs_error', error.message);\n                }\n              },\n            }),\n        )();\n      },\n    };\n  },\n);\n\nconst FS_OPERATIONS_WITH_OLD_PATH_NEW_PATH = ['rename', 'renameSync'];\nconst FS_OPERATIONS_WITH_SRC_DEST = ['copyFile', 'cp', 'copyFileSync', 'cpSync'];\nconst FS_OPERATIONS_WITH_EXISTING_PATH_NEW_PATH = ['link', 'linkSync'];\nconst FS_OPERATIONS_WITH_PREFIX = ['mkdtemp', 'mkdtempSync'];\nconst FS_OPERATIONS_WITH_TARGET_PATH = ['symlink', 'symlinkSync'];\nconst FS_OPERATIONS_WITH_PATH_ARG = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'exists',\n  'mkdir',\n  'lchown',\n  'lstat',\n  'lutimes',\n  'open',\n  'opendir',\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'realpath.native',\n  'rm',\n  'rmdir',\n  'stat',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile',\n  'accessSync',\n  'appendFileSync',\n  'chmodSync',\n  'chownSync',\n  'existsSync',\n  'lchownSync',\n  'lstatSync',\n  'lutimesSync',\n  'opendirSync',\n  'mkdirSync',\n  'openSync',\n  'readdirSync',\n  'readFileSync',\n  'readlinkSync',\n  'realpathSync',\n  'realpathSync.native',\n  'rmdirSync',\n  'rmSync',\n  'statSync',\n  'truncateSync',\n  'unlinkSync',\n  'utimesSync',\n  'writeFileSync',\n];\n"],"names":[],"mappings":"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"}