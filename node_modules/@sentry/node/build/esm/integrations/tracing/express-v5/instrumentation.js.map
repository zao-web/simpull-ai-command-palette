{"version":3,"file":"instrumentation.js","sources":["../../../../../src/integrations/tracing/express-v5/instrumentation.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable guard-for-in */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Attributes } from '@opentelemetry/api';\nimport { context, diag, SpanStatusCode, trace } from '@opentelemetry/api';\nimport { getRPCMetadata, RPCType } from '@opentelemetry/core';\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { SEMATTRS_HTTP_ROUTE } from '@opentelemetry/semantic-conventions';\nimport type * as express from 'express';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { ExpressLayerType } from './enums/ExpressLayerType';\nimport type { ExpressLayer, ExpressRouter, PatchedRequest } from './internal-types';\nimport { _LAYERS_STORE_PROPERTY, kLayerPatched } from './internal-types';\nimport type { ExpressInstrumentationConfig, ExpressRequestInfo } from './types';\nimport { asErrorAndMessage, getLayerMetadata, getLayerPath, isLayerIgnored, storeLayerPath } from './utils';\n\nexport const PACKAGE_VERSION = '0.1.0';\nexport const PACKAGE_NAME = '@sentry/instrumentation-express-v5';\n\n/** Express instrumentation for OpenTelemetry */\nexport class ExpressInstrumentationV5 extends InstrumentationBase<ExpressInstrumentationConfig> {\n  constructor(config: ExpressInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {\n    return [\n      new InstrumentationNodeModuleDefinition(\n        'express',\n        ['>=5.0.0'],\n        moduleExports => this._setup(moduleExports),\n        moduleExports => this._tearDown(moduleExports),\n      ),\n    ];\n  }\n\n  private _setup(moduleExports: any) {\n    const routerProto = moduleExports.Router.prototype;\n    // patch express.Router.route\n    if (isWrapped(routerProto.route)) {\n      this._unwrap(routerProto, 'route');\n    }\n    this._wrap(routerProto, 'route', this._getRoutePatch());\n    // patch express.Router.use\n    if (isWrapped(routerProto.use)) {\n      this._unwrap(routerProto, 'use');\n    }\n    this._wrap(routerProto, 'use', this._getRouterUsePatch() as any);\n    // patch express.Application.use\n    if (isWrapped(moduleExports.application.use)) {\n      this._unwrap(moduleExports.application, 'use');\n    }\n    this._wrap(moduleExports.application, 'use', this._getAppUsePatch() as any);\n    return moduleExports;\n  }\n\n  private _tearDown(moduleExports: any) {\n    if (moduleExports === undefined) return;\n    const routerProto = moduleExports.Router.prototype;\n    this._unwrap(routerProto, 'route');\n    this._unwrap(routerProto, 'use');\n    this._unwrap(moduleExports.application, 'use');\n  }\n\n  /**\n   * Get the patch for Router.route function\n   */\n  private _getRoutePatch() {\n    const instrumentation = this;\n    return function (original: express.Router['route']) {\n      return function route_trace(this: ExpressRouter, ...args: Parameters<typeof original>) {\n        const route = original.apply(this, args);\n        const layer = this.stack[this.stack.length - 1] as ExpressLayer;\n        instrumentation._applyPatch(layer, getLayerPath(args));\n        return route;\n      };\n    };\n  }\n\n  /**\n   * Get the patch for Router.use function\n   */\n  private _getRouterUsePatch() {\n    const instrumentation = this;\n    return function (original: express.Router['use']) {\n      return function use(this: express.Application, ...args: Parameters<typeof original>) {\n        const route = original.apply(this, args);\n        const layer = this.stack[this.stack.length - 1] as ExpressLayer;\n        instrumentation._applyPatch(layer, getLayerPath(args));\n        return route;\n      };\n    };\n  }\n\n  /**\n   * Get the patch for Application.use function\n   */\n  private _getAppUsePatch() {\n    const instrumentation = this;\n    return function (original: express.Application['use']) {\n      return function use(\n        // In express 5.x the router is stored in `router` whereas in 4.x it's stored in `_router`\n        this: { _router?: ExpressRouter; router?: ExpressRouter },\n        ...args: Parameters<typeof original>\n      ) {\n        // if we access app.router in express 4.x we trigger an assertion error\n        // This property existed in v3, was removed in v4 and then re-added in v5\n        const router = this.router;\n        const route = original.apply(this, args);\n        if (router) {\n          const layer = router.stack[router.stack.length - 1] as ExpressLayer;\n          instrumentation._applyPatch(layer, getLayerPath(args));\n        }\n        return route;\n      };\n    };\n  }\n\n  /** Patch each express layer to create span and propagate context */\n  private _applyPatch(this: ExpressInstrumentationV5, layer: ExpressLayer, layerPath?: string) {\n    const instrumentation = this;\n    // avoid patching multiple times the same layer\n    if (layer[kLayerPatched] === true) return;\n    layer[kLayerPatched] = true;\n\n    this._wrap(layer, 'handle', original => {\n      // TODO: instrument error handlers\n      if (original.length === 4) return original;\n\n      const patched = function (this: ExpressLayer, req: PatchedRequest, res: express.Response) {\n        storeLayerPath(req, layerPath);\n        const route = (req[_LAYERS_STORE_PROPERTY] as string[])\n          .filter(path => path !== '/' && path !== '/*')\n          .join('')\n          // remove duplicate slashes to normalize route\n          .replace(/\\/{2,}/g, '/');\n\n        const actualRoute = route.length > 0 ? route : undefined;\n\n        const attributes: Attributes = {\n          // eslint-disable-next-line deprecation/deprecation\n          [SEMATTRS_HTTP_ROUTE]: actualRoute,\n        };\n        const metadata = getLayerMetadata(route, layer, layerPath);\n        const type = metadata.attributes[AttributeNames.EXPRESS_TYPE] as ExpressLayerType;\n\n        const rpcMetadata = getRPCMetadata(context.active());\n        if (rpcMetadata?.type === RPCType.HTTP) {\n          rpcMetadata.route = actualRoute;\n        }\n\n        // verify against the config if the layer should be ignored\n        if (isLayerIgnored(metadata.name, type, instrumentation.getConfig())) {\n          if (type === ExpressLayerType.MIDDLEWARE) {\n            (req[_LAYERS_STORE_PROPERTY] as string[]).pop();\n          }\n          return original.apply(this, arguments);\n        }\n\n        if (trace.getSpan(context.active()) === undefined) {\n          return original.apply(this, arguments);\n        }\n\n        const spanName = instrumentation._getSpanName(\n          {\n            request: req,\n            layerType: type,\n            route,\n          },\n          metadata.name,\n        );\n        const span = instrumentation.tracer.startSpan(spanName, {\n          attributes: Object.assign(attributes, metadata.attributes),\n        });\n\n        const { requestHook } = instrumentation.getConfig();\n        if (requestHook) {\n          safeExecuteInTheMiddle(\n            () =>\n              requestHook(span, {\n                request: req,\n                layerType: type,\n                route,\n              }),\n            e => {\n              if (e) {\n                diag.error('express instrumentation: request hook failed', e);\n              }\n            },\n            true,\n          );\n        }\n\n        let spanHasEnded = false;\n        if (metadata.attributes[AttributeNames.EXPRESS_TYPE] !== ExpressLayerType.MIDDLEWARE) {\n          span.end();\n          spanHasEnded = true;\n        }\n        // listener for response.on('finish')\n        const onResponseFinish = () => {\n          if (spanHasEnded === false) {\n            spanHasEnded = true;\n            span.end();\n          }\n        };\n\n        // verify we have a callback\n        const args = Array.from(arguments);\n        const callbackIdx = args.findIndex(arg => typeof arg === 'function');\n        if (callbackIdx >= 0) {\n          arguments[callbackIdx] = function () {\n            // express considers anything but an empty value, \"route\" or \"router\"\n            // passed to its callback to be an error\n            const maybeError = arguments[0];\n            const isError = ![undefined, null, 'route', 'router'].includes(maybeError);\n            if (!spanHasEnded && isError) {\n              const [error, message] = asErrorAndMessage(maybeError);\n              span.recordException(error);\n              span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message,\n              });\n            }\n\n            if (spanHasEnded === false) {\n              spanHasEnded = true;\n              req.res?.removeListener('finish', onResponseFinish);\n              span.end();\n            }\n            if (!(req.route && isError)) {\n              (req[_LAYERS_STORE_PROPERTY] as string[]).pop();\n            }\n            const callback = args[callbackIdx] as Function;\n            return callback.apply(this, arguments);\n          };\n        }\n\n        try {\n          return original.apply(this, arguments);\n        } catch (anyError) {\n          const [error, message] = asErrorAndMessage(anyError);\n          span.recordException(error);\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message,\n          });\n          throw anyError;\n        } finally {\n          /**\n           * At this point if the callback wasn't called, that means either the\n           * layer is asynchronous (so it will call the callback later on) or that\n           * the layer directly end the http response, so we'll hook into the \"finish\"\n           * event to handle the later case.\n           */\n          if (!spanHasEnded) {\n            res.once('finish', onResponseFinish);\n          }\n        }\n      };\n\n      // `handle` isn't just a regular function in some cases. It also contains\n      // some properties holding metadata and state so we need to proxy them\n      // through through patched function\n      // ref: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/1950\n      // Also some apps/libs do their own patching before OTEL and have these properties\n      // in the proptotype. So we use a `for...in` loop to get own properties and also\n      // any enumerable prop in the prototype chain\n      // ref: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/2271\n      for (const key in original) {\n        Object.defineProperty(patched, key, {\n          get() {\n            return original[key];\n          },\n          set(value) {\n            original[key] = value;\n          },\n        });\n      }\n      return patched;\n    });\n  }\n\n  _getSpanName(info: ExpressRequestInfo, defaultName: string) {\n    const { spanNameHook } = this.getConfig();\n\n    if (!(spanNameHook instanceof Function)) {\n      return defaultName;\n    }\n\n    try {\n      return spanNameHook(info, defaultName) ?? defaultName;\n    } catch (err) {\n      diag.error('express instrumentation: error calling span name rewrite hook', err);\n      return defaultName;\n    }\n  }\n}\n"],"names":[],"mappings":"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"}